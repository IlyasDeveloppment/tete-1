name: Deploy to Development Environment

on:
  push:
    branches:
      - development

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: linkopus/tete-service:latest
          build-args: |
            VERDACCIO_REGISTRY=${{ secrets.VERDACCIO_REGISTRY }}
            VERDACCIO_TOKEN=${{ secrets.VERDACCIO_TOKEN }}

      - name: Deploy to Dev Environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          password: ${{ secrets.DEV_PASSWORD }}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker pull linkopus/tete-service:latest
            docker stop tete-service || true
            docker rm tete-service || true
            
            export RABBITMQ_CLIENT_CERTIFICATE=$(echo '${{ secrets.RABBITMQ_CLIENT_CERTIFICATE }}' | base64 --decode)
            export RABBITMQ_CLIENT_PRIVATE_KEY=$(echo '${{ secrets.RABBITMQ_CLIENT_PRIVATE_KEY }}' | base64 --decode)
            export RABBITMQ_CA_CERTIFICATE=$(echo '${{ secrets.RABBITMQ_CA_CERTIFICATE }}' | base64 --decode)
            
            export REDIS_CA_CERTIFICATE=$(echo '${{ secrets.REDIS_CA_CERTIFICATE }}' | base64 --decode)
            export REDIS_CLIENT_CERTIFICATE=$(echo '${{ secrets.REDIS_CLIENT_CERTIFICATE }}' | base64 --decode)
            export REDIS_CLIENT_PRIVATE_KEY=$(echo '${{ secrets.REDIS_CLIENT_PRIVATE_KEY }}' | base64 --decode)
            
            docker run -d --name tete-service \
              -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
              -e MY_CUSTOM_SECRET='${{ secrets.MY_CUSTOM_SECRET }}' \
              -e ANOTHER_SECRET='${{ secrets.ANOTHER_SECRET }}' \
              -e PORT=${{ secrets.PORT }} \
              -e MONGODB_URI='${{ secrets.MONGODB_URI }}' \
              -e NGINX_HOST='${{ secrets.NGINX_HOST }}' \
              -e RABBITMQ_CLIENT_CERTIFICATE="$RABBITMQ_CLIENT_CERTIFICATE" \
              -e RABBITMQ_CLIENT_PRIVATE_KEY="$RABBITMQ_CLIENT_PRIVATE_KEY" \
              -e RABBITMQ_CA_CERTIFICATE="$RABBITMQ_CA_CERTIFICATE" \
              -e RABBITMQ_URL='${{ secrets.RABBITMQ_URL }}' \
              -e RABBITMQ_CERT_PASSWORD='${{ secrets.RABBITMQ_CERT_PASSWORD }}' \
              -e REDIS_SERVER_HOST='${{ secrets.REDIS_SERVER_HOST }}' \
              -e REDIS_SERVER_PORT='${{ secrets.REDIS_SERVER_PORT }}' \
              -e REDIS_CA_CERTIFICATE="$REDIS_CA_CERTIFICATE" \
              -e REDIS_CLIENT_CERTIFICATE="$REDIS_CLIENT_CERTIFICATE" \
              -e REDIS_CLIENT_PRIVATE_KEY="$REDIS_CLIENT_PRIVATE_KEY" \
              -e REDIS_SERVER_PASSWORD='${{ secrets.REDIS_SERVER_PASSWORD }}' \
              -e REDIS_CLIENT_PASSPHRASE='${{ secrets.REDIS_CLIENT_PASSPHRASE }}' \
              linkopus/tete-service:latest
            docker logout